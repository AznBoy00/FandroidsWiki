# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

test:
    post:
        - if [ -e ./gradlew ]; then ./gradlew jacocoTestReport;else gradle jacocoTestReport;fi
        - bash <(curl -s https://codecov.io/bash)
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/android:api-28-alpha
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/src

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx4096m
      TERM: dumb
    
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run:
          name: LogDNA Repo
          command: echo "deb https://repo.logdna.com stable main" | sudo tee /etc/apt/sources.list.d/logdna.list
          
      - run:
          name: LogDNA Key   
          command: wget -O- https://repo.logdna.com/logdna.gpg | sudo apt-key add -

     - run:
          name: Update           
          command: sudo apt-get update

     - run:
          name: install LogDNA
          command: sudo apt-get install logdna-agent < "/dev/null" 

     - run:
          name: LogDNA Key Config
          command: sudo logdna-agent -k 368c227c81b63798d760204031a410c0 

     - run:
          name: LogDNA Update Defaults       
          command: sudo update-rc.d logdna-agent defaults

     - run:
          name: LogDNA Start    
          command: sudo /etc/init.d/logdna-agent start

      - run:
          name: Update SDK Manager
          command: sdkmanager --update

      - run:
          name: Approve license for build tools
          command: (echo y; echo y; echo y; echo y; echo y; echo y) | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: sudo chmod +x ./gradlew
      
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - run:
          name: Run JUnit Tests
          command: ./gradlew testDevDebug

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - run:
          name: Run Lint Tests
          command: ./gradlew lint

      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports

      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
